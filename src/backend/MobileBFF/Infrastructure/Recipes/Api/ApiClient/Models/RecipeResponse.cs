// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Infrastructure.RecipeApi.Client.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class RecipeResponse : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The cookTime property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CookTime { get; set; }
#nullable restore
#else
        public string CookTime { get; set; }
#endif
        /// <summary>The cuisine property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Infrastructure.RecipeApi.Client.Models.Cuisine? Cuisine { get; set; }
#nullable restore
#else
        public global::Infrastructure.RecipeApi.Client.Models.Cuisine Cuisine { get; set; }
#endif
        /// <summary>The description property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>The directions property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Directions { get; set; }
#nullable restore
#else
        public List<string> Directions { get; set; }
#endif
        /// <summary>The id property</summary>
        public Guid? Id { get; set; }
        /// <summary>The ingredients property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Infrastructure.RecipeApi.Client.Models.Ingredient2>? Ingredients { get; set; }
#nullable restore
#else
        public List<global::Infrastructure.RecipeApi.Client.Models.Ingredient2> Ingredients { get; set; }
#endif
        /// <summary>The mainIngredient property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Infrastructure.RecipeApi.Client.Models.Ingredient? MainIngredient { get; set; }
#nullable restore
#else
        public global::Infrastructure.RecipeApi.Client.Models.Ingredient MainIngredient { get; set; }
#endif
        /// <summary>The name property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>The prepTime property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PrepTime { get; set; }
#nullable restore
#else
        public string PrepTime { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Infrastructure.RecipeApi.Client.Models.RecipeResponse"/> and sets the default values.
        /// </summary>
        public RecipeResponse()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Infrastructure.RecipeApi.Client.Models.RecipeResponse"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Infrastructure.RecipeApi.Client.Models.RecipeResponse CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Infrastructure.RecipeApi.Client.Models.RecipeResponse();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "cookTime", n => { CookTime = n.GetStringValue(); } },
                { "cuisine", n => { Cuisine = n.GetObjectValue<global::Infrastructure.RecipeApi.Client.Models.Cuisine>(global::Infrastructure.RecipeApi.Client.Models.Cuisine.CreateFromDiscriminatorValue); } },
                { "description", n => { Description = n.GetStringValue(); } },
                { "directions", n => { Directions = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "id", n => { Id = n.GetGuidValue(); } },
                { "ingredients", n => { Ingredients = n.GetCollectionOfObjectValues<global::Infrastructure.RecipeApi.Client.Models.Ingredient2>(global::Infrastructure.RecipeApi.Client.Models.Ingredient2.CreateFromDiscriminatorValue)?.AsList(); } },
                { "mainIngredient", n => { MainIngredient = n.GetObjectValue<global::Infrastructure.RecipeApi.Client.Models.Ingredient>(global::Infrastructure.RecipeApi.Client.Models.Ingredient.CreateFromDiscriminatorValue); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "prepTime", n => { PrepTime = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("cookTime", CookTime);
            writer.WriteObjectValue<global::Infrastructure.RecipeApi.Client.Models.Cuisine>("cuisine", Cuisine);
            writer.WriteStringValue("description", Description);
            writer.WriteCollectionOfPrimitiveValues<string>("directions", Directions);
            writer.WriteGuidValue("id", Id);
            writer.WriteCollectionOfObjectValues<global::Infrastructure.RecipeApi.Client.Models.Ingredient2>("ingredients", Ingredients);
            writer.WriteObjectValue<global::Infrastructure.RecipeApi.Client.Models.Ingredient>("mainIngredient", MainIngredient);
            writer.WriteStringValue("name", Name);
            writer.WriteStringValue("prepTime", PrepTime);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618

// <auto-generated/>
#pragma warning disable CS0618
using Infrastructure.MealPlannerApi.Client.Models;
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace Infrastructure.MealPlannerApi.Client.V1.PlanMeal
{
    /// <summary>
    /// Builds and executes requests for operations under \v1\plan-meal
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class PlanMealRequestBuilder : BaseRequestBuilder
    {
        /// <summary>
        /// Instantiates a new <see cref="global::Infrastructure.MealPlannerApi.Client.V1.PlanMeal.PlanMealRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public PlanMealRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/v1/plan-meal{?api%2Dversion*}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Infrastructure.MealPlannerApi.Client.V1.PlanMeal.PlanMealRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public PlanMealRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/v1/plan-meal{?api%2Dversion*}", rawUrl)
        {
        }
        /// <returns>A List&lt;Guid&gt;</returns>
        /// <param name="body">The request body</param>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::Infrastructure.MealPlannerApi.Client.Models.ProblemDetails">When receiving a 400 status code</exception>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<List<Guid?>?> PostAsync(global::Infrastructure.MealPlannerApi.Client.Models.SuggestionsRequest body, Action<RequestConfiguration<global::Infrastructure.MealPlannerApi.Client.V1.PlanMeal.PlanMealRequestBuilder.PlanMealRequestBuilderPostQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<List<Guid?>> PostAsync(global::Infrastructure.MealPlannerApi.Client.Models.SuggestionsRequest body, Action<RequestConfiguration<global::Infrastructure.MealPlannerApi.Client.V1.PlanMeal.PlanMealRequestBuilder.PlanMealRequestBuilderPostQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = ToPostRequestInformation(body, requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "400", global::Infrastructure.MealPlannerApi.Client.Models.ProblemDetails.CreateFromDiscriminatorValue },
            };
            var collectionResult = await RequestAdapter.SendPrimitiveCollectionAsync<Guid?>(requestInfo, errorMapping, cancellationToken).ConfigureAwait(false);
            return collectionResult?.AsList();
        }
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToPostRequestInformation(global::Infrastructure.MealPlannerApi.Client.Models.SuggestionsRequest body, Action<RequestConfiguration<global::Infrastructure.MealPlannerApi.Client.V1.PlanMeal.PlanMealRequestBuilder.PlanMealRequestBuilderPostQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToPostRequestInformation(global::Infrastructure.MealPlannerApi.Client.Models.SuggestionsRequest body, Action<RequestConfiguration<global::Infrastructure.MealPlannerApi.Client.V1.PlanMeal.PlanMealRequestBuilder.PlanMealRequestBuilderPostQueryParameters>> requestConfiguration = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = new RequestInformation(Method.POST, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            requestInfo.SetContentFromParsable(RequestAdapter, "application/json", body);
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::Infrastructure.MealPlannerApi.Client.V1.PlanMeal.PlanMealRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::Infrastructure.MealPlannerApi.Client.V1.PlanMeal.PlanMealRequestBuilder WithUrl(string rawUrl)
        {
            return new global::Infrastructure.MealPlannerApi.Client.V1.PlanMeal.PlanMealRequestBuilder(rawUrl, RequestAdapter);
        }
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        #pragma warning disable CS1591
        public partial class PlanMealRequestBuilderPostQueryParameters 
        #pragma warning restore CS1591
        {
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("api%2Dversion")]
            public string? ApiVersion { get; set; }
#nullable restore
#else
            [QueryParameter("api%2Dversion")]
            public string ApiVersion { get; set; }
#endif
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class PlanMealRequestBuilderPostRequestConfiguration : RequestConfiguration<global::Infrastructure.MealPlannerApi.Client.V1.PlanMeal.PlanMealRequestBuilder.PlanMealRequestBuilderPostQueryParameters>
        {
        }
    }
}
#pragma warning restore CS0618
